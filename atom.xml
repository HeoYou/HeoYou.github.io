<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.1">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-08T22:45:14+09:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">HeoYou You don’t know this?</title><subtitle></subtitle><author><name>HeoYou</name></author><entry><title type="html">[GOLANG] GO 설치부터 사용까지_01(설치부터 환경변수 설정까지) !</title><link href="http://localhost:4000/go/2022/02/05/go-01-go-install.html" rel="alternate" type="text/html" title="[GOLANG] GO 설치부터 사용까지_01(설치부터 환경변수 설정까지) !" /><published>2022-02-05T00:00:00+09:00</published><updated>2022-02-05T00:00:00+09:00</updated><id>http://localhost:4000/go/2022/02/05/go-01-go-install</id><content type="html" xml:base="http://localhost:4000/go/2022/02/05/go-01-go-install.html">&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;GO를 다뤄보자!&lt;/p&gt;

&lt;h2 id=&quot;설치-환경&quot;&gt;설치 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;windows10&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;h3 id=&quot;1-go-홈페이지에-들어가자-홈페이지로&quot;&gt;1. go 홈페이지에 들어가자! &lt;a href=&quot;https://go.dev/&quot;&gt;[홈페이지로]&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152995306-c1adb877-c07f-42c3-90ae-fa15779cd68c.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다운로드가 대문짝만하게 보입니다. 다운로드 클릭&lt;/p&gt;

&lt;h3 id=&quot;2-자신이-원하는-버전-또는-os버전을-골라-다운로드-합니다&quot;&gt;2. 자신이 원하는 버전 또는 os버전을 골라 다운로드 합니다.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152995899-87ea16c2-fa2a-4437-afe7-29bb58ea45f9.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;저는 개인적으로 설치형태보다는 압축형태로 다운로드해서 사용하는걸 좋아합니다. 
&lt;br /&gt;
그래서 zip파일인 아래에서 두번째 파일을 다운로드 하겠습니다. 
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152996602-bc5a8244-04f0-486d-bd80-c6edea119c07.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;원하는 경로에 다운로드 후 압축을 풀어줍니다.&lt;/p&gt;

&lt;h3 id=&quot;3-환경설정&quot;&gt;3. 환경설정&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152997711-e32dad5a-7e90-41f9-aabb-61008e9cc2fa.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;내 PC -&amp;gt; 속성 -&amp;gt; 고급 시스템 설정 -&amp;gt; 고급 탭 -&amp;gt; 환경 변수 들어가면 위와같은 화면이 나옵니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152998113-a354ef57-fdd8-490e-940e-232e16111aa6.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;시스템 변수 -&amp;gt; 새로 만들기 클릭
&lt;br /&gt;
변수이름에 ‘GOROOT’적고 변수 값에 본인이 다운로드한 go의 경로를 입력합니다.(압축을 풀어준 상태)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;—한번 더—&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152998615-8bf10a2a-846f-4bf1-bd7f-ccad1598180d.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;시스템 변수 -&amp;gt; 새로 만들기 클릭
&lt;br /&gt;
변수이름에 ‘GOPATH’적고 변수 값에 본인이 설정한 GOPATH의 경로를 입력합니다.(GOPATH는 제가 원하는 경로로 따로 만들어 두었습니다.)&lt;/p&gt;

&lt;h3 id=&quot;4-설치-확인&quot;&gt;4. 설치 확인&lt;/h3&gt;

&lt;p&gt;커멘드 창에 들어갑니다. 다음 명령어를 입력합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152998944-4fcfc6fb-6c34-4c18-bd9a-ac3ab45d75cd.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;버전이 나오는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위 명령어 입력 시 수정한 GOPATH도 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152999363-2d54e57d-1b2e-416a-8a9d-c358e4f2f0de.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>HeoYou</name></author><category term="go" /><category term="install" /><category term="windows10" /><summary type="html">Intro GO를 다뤄보자!</summary></entry><entry><title type="html">[docker-compose] 설치부터 사용까지_01(설치)</title><link href="http://localhost:4000/docker/2022/02/04/docker-compose-01-docker-compose-install.html" rel="alternate" type="text/html" title="[docker-compose] 설치부터 사용까지_01(설치)" /><published>2022-02-04T00:00:00+09:00</published><updated>2022-02-04T00:00:00+09:00</updated><id>http://localhost:4000/docker/2022/02/04/docker-compose-01-docker-compose-install</id><content type="html" xml:base="http://localhost:4000/docker/2022/02/04/docker-compose-01-docker-compose-install.html">&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Docker compose는 복잡한 명령어를 편리하게 관리하도록 도와준다. 
&lt;br /&gt;
그래서 설치해 보았다.&lt;/p&gt;

&lt;h2 id=&quot;설치-환경&quot;&gt;설치 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;WSL2 ubuntu LTS 20.04&lt;/li&gt;
  &lt;li&gt;Docker 20.10.12 &lt;a href=&quot;https://heoyou.github.io/docker/2022/02/02/docker-01-docker-install.html&quot;&gt;[설치하러 가기]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;docker-compose-설치하기&quot;&gt;Docker compose 설치하기&lt;/h2&gt;

&lt;h3 id=&quot;1-다운로드&quot;&gt;1. 다운로드&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;도커 컴포즈 설치(버전 수정이 가능하다)&lt;a href=&quot;https://github.com/docker/compose/releases&quot;&gt;[버전 확인하러 가기]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-실행-권한-적용&quot;&gt;2. 실행 권한 적용&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-심볼릭-링크-설정&quot;&gt;3. 심볼릭 링크 설정&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /usr/local/bin/docker-compose /usr/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-설치-확인&quot;&gt;4. 설치 확인&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker-compose &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152796338-af762243-7e5a-4b2d-8a52-d09de2f6a8c0.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>HeoYou</name></author><category term="Docker" /><category term="Docker" /><category term="container" /><category term="docker-compose" /><summary type="html">Intro Docker compose는 복잡한 명령어를 편리하게 관리하도록 도와준다. 그래서 설치해 보았다.</summary></entry><entry><title type="html">[Docker] 설치부터 사용까지!_03(기초 - container 활용하기)</title><link href="http://localhost:4000/docker/2022/02/03/docker-03-docker-make-container-copy.html" rel="alternate" type="text/html" title="[Docker] 설치부터 사용까지!_03(기초 - container 활용하기)" /><published>2022-02-03T00:00:00+09:00</published><updated>2022-02-03T00:00:00+09:00</updated><id>http://localhost:4000/docker/2022/02/03/docker-03-docker-make-container%20copy</id><content type="html" xml:base="http://localhost:4000/docker/2022/02/03/docker-03-docker-make-container-copy.html">&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Docker의 기본적인 기능을 아라보자.&lt;/p&gt;

&lt;h2 id=&quot;실행-환경&quot;&gt;실행 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;WSL2 ubuntu LTS 20.04&lt;/li&gt;
  &lt;li&gt;Docker 20.10.12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152668784-9f8103f9-6d13-467b-9b6d-9891fa332fae.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;docker-container-활용하기&quot;&gt;Docker container 활용하기&lt;/h2&gt;

&lt;h3 id=&quot;1-docker-image-준비하기&quot;&gt;1. Docker Image 준비하기&lt;/h3&gt;
&lt;p&gt;학습을 위해 ubuntu 18.04 이미지를 다운로드 하겠습니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker pull ubuntu:18.04
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152669866-ed2bda96-11b8-4c21-aed0-9f1d14af0701.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ubuntu 18.04버전이 다운로드 된 것을 확인 할 수 있습니다.
&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-container-명령어&quot;&gt;2. Container 명령어&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;docker run
    &lt;ul&gt;
      &lt;li&gt;컨테이너를 실행시키는 명령어 입니다.
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;옵션&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-i&lt;/td&gt;
          &lt;td&gt;-t와 같이 사용해야 합니다. 표준입력을 활성화시키며 컨테이너와&lt;br /&gt; 연결되어있지 않더라도 표준입력을 유지합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-t&lt;/td&gt;
          &lt;td&gt;-i옵션과 같이 사용해야 합니다. TTY모드로 사용하며 bash를 사용하기 &lt;br /&gt;위해서는 꼭 필요합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-d&lt;/td&gt;
          &lt;td&gt;컨테이너를 백그라운드 모드로 실행, ps명령어로 실행되는지 확인할 수 있습니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-p&lt;/td&gt;
          &lt;td&gt;컨테이너 포트를 호스트와 연결합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;—–name&lt;/td&gt;
          &lt;td&gt;컨테이너의 이름을 설정합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-e&lt;/td&gt;
          &lt;td&gt;컨테이너의 환경변수를 설정할 수 있습니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-v&lt;/td&gt;
          &lt;td&gt;컨테이너의 볼륨(volumn) 설정을 위해 사용됩니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;—–rm&lt;/td&gt;
          &lt;td&gt;컨테이너 정지 시 자동 삭제합니다.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;docker ps
    &lt;ul&gt;
      &lt;li&gt;컨테이너의 정보를 볼 수 있습니다.
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;옵션&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-a&lt;/td&gt;
          &lt;td&gt;모든 컨테이너의 정보를 출력한니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-f&lt;/td&gt;
          &lt;td&gt;컨테이너 리스트를 필터링하여 출력합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-l&lt;/td&gt;
          &lt;td&gt;마지막에 만든 컨테이너를 출력합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-q&lt;/td&gt;
          &lt;td&gt;컨테이터의 ID만 출력합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;-s&lt;/td&gt;
          &lt;td&gt;컨테이너의 사이즈를 출력합니다.&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;docker start
    &lt;ul&gt;
      &lt;li&gt;컨테이너를 실행시킵니다.
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;docker stop
    &lt;ul&gt;
      &lt;li&gt;컨테이너를 중지시킵니다.
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;docker attach
    &lt;ul&gt;
      &lt;li&gt;실행중인 컨테이너에 연결합니다.
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;docker restart
    &lt;ul&gt;
      &lt;li&gt;컨테이너를 재실행합니다.
  &lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;3-container-만들기&quot;&gt;3. Container 만들기&lt;/h3&gt;
&lt;p&gt;이미지를 실행시켜 컨테이너로 만들기 위해서는 ‘run’옵션을 활용합니다. 
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;option] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;image[:tag]] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;COMMAND] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ARG...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;기본적인 사용법
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;직접-해보기&quot;&gt;직접 해보기&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152674678-56864c7d-8dd6-4e32-adde-61368609dcc4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker images
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; ubuntu18 ubuntu:18.04 /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;docker images를 이용하여 이미지의 정보를 확인&lt;/li&gt;
  &lt;li&gt;순서대로 -it옵션, 이름 ubunut18, 이미지 ubuntu, 이미지 태그 18.04, /bin/bash 명령어입니다.&lt;/li&gt;
  &lt;li&gt;컨테이너 내부에 접속해 ubuntu 버전을 확인한 모습을 볼 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[TIP]&lt;/strong&gt; 이미지 이름과 태그를 넣지않고 IMAGE ID를 이용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; ubuntu18 dcf /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;[INFO]&lt;/strong&gt; —–name 다음엔 공백과 =가 모두 같은 동작을 한다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ubuntu18 dcf /bin/bash
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; ubuntu18 dcf /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;contaier에서-나가기&quot;&gt;Contaier에서 나가기&lt;/h4&gt;
&lt;p&gt;컨테이너에서 나가는 방법은 여러개 있습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ctrl + p + q&lt;/li&gt;
  &lt;li&gt;exit 입력&lt;/li&gt;
  &lt;li&gt;강제 종료&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;exit 또는 강제 종료를 할 경우 컨테이너가 중단됩니다.
&lt;br /&gt;
컨테이너를 종료시키지 않으려면 ctrl + p + q를 사용해야합니다.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-container-확인&quot;&gt;4. Container 확인&lt;/h3&gt;
&lt;p&gt;생성한 컨테이너에서 나와서 만들어진 컨테이너를 확인해 보겠습니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;모든 컨테이너를 확인하기 위해 -a옵션을 붙여주었습니다. 
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152675831-de3c3fca-47ec-491b-8c26-6a31e8831999.png&quot; alt=&quot;image&quot; /&gt;
컨테이너에서 ctrl + p + q를 이용하여 빠져나왔기 때문에 아직 컨테이너가 중지되지 않았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152675911-542f4523-d068-4d4b-b7bb-2dd967861533.png&quot; alt=&quot;image&quot; /&gt;
exit를 사용하여 빠져나오게 되면 컨테이너가 중지됩니다.&lt;/p&gt;

&lt;h3 id=&quot;5-container-실행&quot;&gt;5. Container 실행&lt;/h3&gt;

&lt;p&gt;죽어있는 컨테이너를 실행시키겠습니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker start 998
or
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker start ubuntu18
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;명령어중 마지막 인자 CONTAINER ID 또는 NAMES중 편하신거 이용하시면됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152676104-ac061385-9a44-41c6-b070-50ec2933f1af.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;6-container-접속&quot;&gt;6. Container 접속&lt;/h3&gt;

&lt;p&gt;attach 명령어 또는 exec 명령어를 사용해 들어갑니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker attach 998
or
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; 998 /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;attach와 다르게 exec는 다양한 옵션을 사용할 수 있습니다. (나중에 정리)&lt;/p&gt;

&lt;h3 id=&quot;7-container-중지&quot;&gt;7. Container 중지&lt;/h3&gt;

&lt;p&gt;stop 명령어를 사용합니다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker stop 998
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;8-container-삭제&quot;&gt;8. Container 삭제&lt;/h3&gt;

&lt;p&gt;rm 명령어를 이용합니다. -f옵션을 넣어주면 실행중인 컨테이너도 삭제가 가능합니다
&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152676374-d612900a-cfee-47b4-8fdf-f43973e91e5a.png&quot; alt=&quot;image&quot; /&gt;
실행중인 컨테이너를 삭제하려고 하였으나 삭제가 안되어 -f 옵션을 넣어 삭제 했습니다.&lt;/p&gt;</content><author><name>HeoYou</name></author><category term="Docker" /><category term="Docker" /><category term="container" /><summary type="html">Intro Docker의 기본적인 기능을 아라보자.</summary></entry><entry><title type="html">[Docker] 설치부터 사용까지!_01(설치)</title><link href="http://localhost:4000/docker/2022/02/02/docker-01-docker-install.html" rel="alternate" type="text/html" title="[Docker] 설치부터 사용까지!_01(설치)" /><published>2022-02-02T00:00:00+09:00</published><updated>2022-02-02T00:00:00+09:00</updated><id>http://localhost:4000/docker/2022/02/02/docker-01-docker-install</id><content type="html" xml:base="http://localhost:4000/docker/2022/02/02/docker-01-docker-install.html">&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;처음 접해본 Docker는 신세계였다. 그래서 정리하였다.&lt;/p&gt;

&lt;h2 id=&quot;설치-환경&quot;&gt;설치 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;WSL2 ubunt LTS 20.04&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;기존 도커를 삭제하자
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get remove docker docker-engine docker.io containerd runc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;다운로드를 위한 package 설치 해주자
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; - y 
  apt-transport-https &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  ca-certificates &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  curl &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  gnupg &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Official GPG Key등록
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://download.docker.com/linux/ubuntu/gpg | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;stable repository 등록
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository &lt;span class=&quot;s2&quot;&gt;&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;lsb_release &lt;span class=&quot;nt&quot;&gt;-cs&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; stable&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;docker engine 설치
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;설치 확인
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152668784-9f8103f9-6d13-467b-9b6d-9891fa332fae.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;정상적으로 설치된 것을 알 수 있다.&lt;/p&gt;</content><author><name>HeoYou</name></author><category term="Docker" /><category term="Docker" /><summary type="html">Intro 처음 접해본 Docker는 신세계였다. 그래서 정리하였다.</summary></entry><entry><title type="html">[Docker] 설치부터 사용까지!_02(기초 - 이미지 받기)</title><link href="http://localhost:4000/docker/2022/02/02/docker-02-docker-image-download.html" rel="alternate" type="text/html" title="[Docker] 설치부터 사용까지!_02(기초 - 이미지 받기)" /><published>2022-02-02T00:00:00+09:00</published><updated>2022-02-02T00:00:00+09:00</updated><id>http://localhost:4000/docker/2022/02/02/docker-02-docker-image-download</id><content type="html" xml:base="http://localhost:4000/docker/2022/02/02/docker-02-docker-image-download.html">&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Docker의 기본적인 기능을 아라보자.&lt;/p&gt;

&lt;h2 id=&quot;실행-환경&quot;&gt;실행 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;WSL2 ubuntu LTS 20.04&lt;/li&gt;
  &lt;li&gt;Docker 20.10.12&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152668784-9f8103f9-6d13-467b-9b6d-9891fa332fae.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;docker-사용하기&quot;&gt;Docker 사용하기&lt;/h2&gt;

&lt;h3 id=&quot;1-docker-실행&quot;&gt;1. Docker 실행&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dockerd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152669388-425f92fd-a42c-49e5-b51c-296fac82ce3b.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;위 사진처럼 나오면 실행이 완료된 것이다. 현제 컨테이너가 실행되고 있지 않아서 다음과 같이 나온다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-이미지-목록-보기&quot;&gt;2. 이미지 목록 보기&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker images
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-이미지-검색&quot;&gt;3. 이미지 검색&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker search &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;이미지 이름]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152669469-d097c015-5721-46f9-bef1-d3f13c74da09.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ubuntu를 검색해본 화면이다. 
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-이미지-받기&quot;&gt;4. 이미지 받기&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker pull &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;이미지 이름]:[버전]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152669518-496b1e6c-6fb1-48e8-96e0-e993f11a3b9b.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;[버전]에 원하는 버전을 넣고 아무것도 넣지 않는다면 기본태그는 ‘lasted’로 들어가게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152669587-5d7f48da-cde5-461b-a3ae-34ffc5997ab4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;sudo docker images를 통해 다운 받은 이미지를 확인 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-이미지-삭제&quot;&gt;5. 이미지 삭제&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker rmi &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;이미지 ID]
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker rmi &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;이미지 ID] - &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;는 강제 삭제 옵션이다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152669764-5eaa04bd-5085-452b-b68a-dabf4df5342d.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;이미지 ID는 IMAGE ID 부분에 ‘54c9d81cbb44’을 의미한다.&lt;/li&gt;
  &lt;li&gt;[TIP] 삭제시 이미지 ID의 앞 3자리만 입력해도 삭제가 된다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>HeoYou</name></author><category term="Docker" /><category term="Docker" /><summary type="html">Intro Docker의 기본적인 기능을 아라보자.</summary></entry><entry><title type="html">[Windows 10] WSL2 사용 &amp;amp; 설치</title><link href="http://localhost:4000/windows/linux/2022/02/01/wsl2-01.html" rel="alternate" type="text/html" title="[Windows 10] WSL2 사용 &amp;amp; 설치" /><published>2022-02-01T00:00:00+09:00</published><updated>2022-02-01T00:00:00+09:00</updated><id>http://localhost:4000/windows/linux/2022/02/01/wsl2-01</id><content type="html" xml:base="http://localhost:4000/windows/linux/2022/02/01/wsl2-01.html">&lt;h2 id=&quot;wsl2-설치-조건&quot;&gt;WSL2 설치 조건&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Windows10 2004 이상(빌드 19041) 버전(버전이 낮으면 윈도우 업데이트를 해야한다.)&lt;/li&gt;
  &lt;li&gt;CPU가 가상화를 지원해야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;환경-만들기&quot;&gt;환경 만들기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;CPU가 가상화를 지원해야한다.(보충설명 해야하는데 나중에.)&lt;/li&gt;
  &lt;li&gt;WSL2는 windows10 hyper-v가 실행되어야 한다.
    &lt;ul&gt;
      &lt;li&gt;Hyper-V 실행&lt;a href=&quot;https://docs.microsoft.com/ko-kr/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&quot;&gt;(클릭)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;PowerShell 또는 Windows 명령 프롬프트에서 아래 명령을 입력합니다.(관리자 권한 실행)
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wsl --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;위 명령어는 최신 Linux커널을 다운로드하고, WSL2, Ubuntu를 기본값으로 설치합니다.&lt;/li&gt;
      &lt;li&gt;설치 완료 시 아래와 같이 재부팅 하라는 말이 나옵니다. 재부팅을 해줍니다.
&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152667565-190a8950-4fb1-45c4-adbe-792c2e4743ab.png&quot; alt=&quot;image&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Microsoft Store 에서 사용하고자 하는 ubuntu를 설치 실행합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152667645-7ed50060-2cfd-4f4e-a4ea-570d65c45387.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/51642448/152668244-6dd50e84-bf38-4a05-88d6-ac7a1ddd8770.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu가 정상동작 합니다.&lt;/p&gt;

&lt;p&gt;WSL2가 처음 나왔을땐 이것저것 많이 해줬어야했는데 지금은 많이 단조로워져서 설치하기 쉬웠다.&lt;/p&gt;</content><author><name>HeoYou</name></author><category term="Windows" /><category term="Linux" /><category term="WSL2" /><summary type="html">WSL2 설치 조건</summary></entry></feed>